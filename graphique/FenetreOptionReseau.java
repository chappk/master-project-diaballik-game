package graphique;

import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import javax.swing.AbstractAction;
import javax.swing.InputMap;
import javax.swing.JComponent;
import javax.swing.JOptionPane;
import javax.swing.KeyStroke;
import moteur.*;
import reseau.exception.PseudoException;

/**
 *
 * @author disavinr
 */
public class FenetreOptionReseau extends javax.swing.JDialog {

    public static final String err_pseudo_vide = "Pseudo obligatoire";
    public static final String err_pseudo_invalide = "Pseudo invalide";
    public static final String err_pseudo_existant = "Pseudo déjà existant";
	public static final String err_connexion = "Connexion impossible";
    public Diabolik diabolik;

    /**
     * Creates new form FenetreOptionReseau
     */
    public FenetreOptionReseau(Diabolik diabolik, javax.swing.JFrame parent) {
        super(parent, true);
        this.diabolik = diabolik;
		
        initComponents();
		
        erreurLabel.setVisible(false);
        monIpTextField.setText(diabolik.getMonIp());

        // on ferme la boite de dialogue avec appui sur ESC
        AbstractAction act = new AbstractAction() {

            @Override
            public void actionPerformed(ActionEvent e) {
                putValue(ACTION_COMMAND_KEY, "actionCommand"); // pas sûr que ce soit utile
                dispose();
            }
        };
        getRootPane().getActionMap().put("esc_quit", act);
        InputMap im = getRootPane().getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
        im.put(KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE, 0), "esc_quit");

        // on valide la boite de dialogue avec appui sur ENTER
        AbstractAction act2 = new AbstractAction() {

            @Override
            public void actionPerformed(ActionEvent e) {
                putValue(ACTION_COMMAND_KEY, "actionCommand"); // pas sûr que ce soit utile
                valider();
            }
        };
        getRootPane().getActionMap().put("enter_valid", act2);
        im.put(KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0), "enter_valid");

        setLocationRelativeTo(getParent());
        setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ipServeurTextField = new javax.swing.JTextField();
        annulerJButton = new javax.swing.JButton();
        connexionButton = new javax.swing.JButton();
        pseudoTextField = new javax.swing.JTextField();
        erreurLabel = new javax.swing.JLabel();
        monIpTextField = new javax.swing.JTextField();
        fondOption = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Options Réseau");
        setMinimumSize(new java.awt.Dimension(400, 260));
        setPreferredSize(new java.awt.Dimension(400, 180));
        setResizable(false);
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
        });
        getContentPane().setLayout(null);

        ipServeurTextField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        ipServeurTextField.setBorder(null);
        ipServeurTextField.setOpaque(false);
        getContentPane().add(ipServeurTextField);
        ipServeurTextField.setBounds(170, 54, 200, 20);

        annulerJButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/graphique/images/secondeVersion/annuler.png"))); // NOI18N
        annulerJButton.setBorder(null);
        annulerJButton.setBorderPainted(false);
        annulerJButton.setContentAreaFilled(false);
        annulerJButton.setFocusPainted(false);
        annulerJButton.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/graphique/images/secondeVersion/annulerClique.png"))); // NOI18N
        annulerJButton.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/graphique/images/secondeVersion/annulerSurvol.png"))); // NOI18N
        annulerJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                annulerJButtonActionPerformed(evt);
            }
        });
        getContentPane().add(annulerJButton);
        annulerJButton.setBounds(290, 180, 110, 50);

        connexionButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/graphique/images/secondeVersion/connexion.png"))); // NOI18N
        connexionButton.setBorder(null);
        connexionButton.setBorderPainted(false);
        connexionButton.setContentAreaFilled(false);
        connexionButton.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/graphique/images/secondeVersion/connexionClique.png"))); // NOI18N
        connexionButton.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/graphique/images/secondeVersion/connexionSurvol.png"))); // NOI18N
        connexionButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                connexionButtonActionPerformed(evt);
            }
        });
        getContentPane().add(connexionButton);
        connexionButton.setBounds(20, 180, 143, 50);

        pseudoTextField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        pseudoTextField.setBorder(null);
        pseudoTextField.setOpaque(false);
        getContentPane().add(pseudoTextField);
        pseudoTextField.setBounds(100, 14, 258, 20);

        erreurLabel.setFont(new java.awt.Font("Dialog", 2, 12)); // NOI18N
        erreurLabel.setForeground(new java.awt.Color(255, 0, 51));
        erreurLabel.setText("Pseudo obligatoire");
        getContentPane().add(erreurLabel);
        erreurLabel.setBounds(190, 150, 200, 16);

        monIpTextField.setBackground(new java.awt.Color(238, 238, 238));
        monIpTextField.setEditable(false);
        monIpTextField.setFont(new java.awt.Font("Dialog", 2, 14)); // NOI18N
        monIpTextField.setBorder(null);
        monIpTextField.setOpaque(false);
        getContentPane().add(monIpTextField);
        monIpTextField.setBounds(100, 110, 191, 30);

        fondOption.setIcon(new javax.swing.ImageIcon(getClass().getResource("/graphique/images/secondeVersion/fondOptionReseau.png"))); // NOI18N
        getContentPane().add(fondOption);
        fondOption.setBounds(0, -10, 400, 250);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void annulerJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_annulerJButtonActionPerformed
        dispose();
    }//GEN-LAST:event_annulerJButtonActionPerformed

    private void connexionButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_connexionButtonActionPerformed
		valider();
    }//GEN-LAST:event_connexionButtonActionPerformed

	private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed
            if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
                valider();
            }
	}//GEN-LAST:event_formKeyPressed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton annulerJButton;
    private javax.swing.JButton connexionButton;
    private javax.swing.JLabel erreurLabel;
    private javax.swing.JLabel fondOption;
    private javax.swing.JTextField ipServeurTextField;
    private javax.swing.JTextField monIpTextField;
    private javax.swing.JTextField pseudoTextField;
    // End of variables declaration//GEN-END:variables

    private void valider() {
		if (!pseudoTextField.getText().trim().isEmpty()) {
			try {
				diabolik.initialiserReseau(ipServeurTextField.getText().trim(), pseudoTextField.getText().trim());
				dispose();
			} catch (PseudoException ex) {
				erreurLabel.setText(ex.getMessage());
				erreurLabel.setVisible(true);
			} catch (NotBoundException ex) {
				JOptionPane.showMessageDialog(this, err_connexion, "Erreur", JOptionPane.ERROR_MESSAGE);
			} catch (RemoteException ex) {
				JOptionPane.showMessageDialog(this, err_connexion, "Erreur", JOptionPane.ERROR_MESSAGE);
			}
		} else {
			erreurLabel.setText(err_pseudo_vide);
			erreurLabel.setVisible(true);
		}
	}
}
